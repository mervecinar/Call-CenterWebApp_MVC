// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication13.Models;

#nullable disable

namespace WebApplication13.Migrations
{
    [DbContext(typeof(BLM19417EContext))]
    [Migration("20221204123236_mervecinarson")]
    partial class mervecinarson
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebApplication13.Models.CosRepresantative", b =>
                {
                    b.Property<int>("CosRepresantativeId")
                        .HasColumnType("int");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<string>("LastName")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.HasKey("CosRepresantativeId");

                    b.HasIndex("DepartmentId");

                    b.ToTable("CosRepresantatives");
                });

            modelBuilder.Entity("WebApplication13.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int?>("CosRepresantativeId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<string>("LastName")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<string>("age")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("point")
                        .HasColumnType("int");

                    b.HasKey("CustomerId");

                    b.HasIndex("CosRepresantativeId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("WebApplication13.Models.Department", b =>
                {
                    b.Property<int>("DepartmentId")
                        .HasColumnType("int")
                        .HasColumnName("DepartmentID");

                    b.Property<string>("DepartmentName")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.HasKey("DepartmentId");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("WebApplication13.Models.RequestComplaint", b =>
                {
                    b.Property<int>("RequestComplaintId")
                        .HasColumnType("int");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .HasMaxLength(100)
                        .HasColumnType("nchar(100)")
                        .IsFixedLength();

                    b.Property<string>("Type")
                        .HasMaxLength(100)
                        .HasColumnType("nchar(100)")
                        .IsFixedLength();

                    b.HasKey("RequestComplaintId");

                    b.HasIndex("CustomerId");

                    b.ToTable("RequestComplaints");
                });

            modelBuilder.Entity("WebApplication13.Models.Score", b =>
                {
                    b.Property<int>("CosRepresantativeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CosRepresantativeId"));

                    b.Property<int>("CosRepresantativeId1")
                        .HasColumnType("int");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("totalScore")
                        .HasColumnType("int");

                    b.HasKey("CosRepresantativeId");

                    b.HasIndex("CosRepresantativeId1");

                    b.HasIndex("CustomerId");

                    b.ToTable("Score");
                });

            modelBuilder.Entity("WebApplication13.Models.CosRepresantative", b =>
                {
                    b.HasOne("WebApplication13.Models.Department", "Department")
                        .WithMany("CosRepresantatives")
                        .HasForeignKey("DepartmentId")
                        .HasConstraintName("FK__CosRepresantatives__Depar__398D8EEE");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("WebApplication13.Models.Customer", b =>
                {
                    b.HasOne("WebApplication13.Models.CosRepresantative", "CosRepresantative")
                        .WithMany("Customers")
                        .HasForeignKey("CosRepresantativeId")
                        .HasConstraintName("FK__Customers__CosRepresantative__398D8EEE");

                    b.Navigation("CosRepresantative");
                });

            modelBuilder.Entity("WebApplication13.Models.RequestComplaint", b =>
                {
                    b.HasOne("WebApplication13.Models.Customer", "Customer")
                        .WithMany("RequestComplaints")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("FK__RequestComplaints__Customer__398D8EEE");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("WebApplication13.Models.Score", b =>
                {
                    b.HasOne("WebApplication13.Models.CosRepresantative", "CosRepresantative")
                        .WithMany("Score")
                        .HasForeignKey("CosRepresantativeId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication13.Models.Customer", "Customer")
                        .WithMany("Score")
                        .HasForeignKey("CustomerId");

                    b.Navigation("CosRepresantative");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("WebApplication13.Models.CosRepresantative", b =>
                {
                    b.Navigation("Customers");

                    b.Navigation("Score");
                });

            modelBuilder.Entity("WebApplication13.Models.Customer", b =>
                {
                    b.Navigation("RequestComplaints");

                    b.Navigation("Score");
                });

            modelBuilder.Entity("WebApplication13.Models.Department", b =>
                {
                    b.Navigation("CosRepresantatives");
                });
#pragma warning restore 612, 618
        }
    }
}
